{"ast":null,"code":"var _jsxFileName = \"/Users/heangzhan/Desktop/se2021_part1/se2021/src/Part1File/RegisterPage.jsx\";\nimport React, { useState, Component } from 'react';\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete, Layout, message } from 'antd';\nimport TopBar from \"../Component/TopBar\";\nimport '../assets/css/RegisterPage.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content\n} = Layout;\nconst {\n  Option\n} = Select;\nvar storage = window.localStorage;\nconst defaultUrl = 'http://127.0.0.1:5003';\nconst residences = [{\n  value: 'province',\n  label: '省份',\n  children: [{\n    value: 'city',\n    label: '城市',\n    children: [{\n      value: 'district',\n      label: '地区'\n    }]\n  }]\n}, {\n  value: '浙江',\n  label: '浙江',\n  children: [{\n    value: '杭州',\n    label: '杭州',\n    children: [{\n      value: '上城区',\n      label: '上城区'\n    }, {\n      value: '西湖区',\n      label: '西湖区'\n    }, {\n      value: 'gongshu',\n      label: '拱墅区'\n    }, {\n      value: '江干区',\n      label: '江干区'\n    }, {\n      value: '临平区',\n      label: '临平区'\n    }, {\n      value: '余杭区',\n      label: '余杭区'\n    }, {\n      value: '萧山区',\n      label: '萧山区'\n    }, {\n      value: '滨江区',\n      label: '滨江区'\n    }, {\n      value: '钱塘区',\n      label: '钱塘区'\n    }, {\n      value: '富阳区',\n      label: '富阳区'\n    }, {\n      value: '临安区',\n      label: '临安区'\n    }]\n  }]\n}];\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst prefixSelector = /*#__PURE__*/_jsxDEV(Form.Item, {\n  name: \"prefix\",\n  noStyle: true,\n  children: /*#__PURE__*/_jsxDEV(Select, {\n    style: {\n      width: 70\n    },\n    children: [/*#__PURE__*/_jsxDEV(Option, {\n      value: \"86\",\n      children: \"+86\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"81\",\n      children: \"+81\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"1\",\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"44\",\n      children: \"+44\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 112,\n  columnNumber: 5\n}, this);\n\nclass RegisterPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUid = e => {\n      this.setState({\n        uid: e.target.value\n      });\n    };\n\n    this.getEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.getPassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.getNickname = e => {\n      this.setState({\n        nickname: e.target.value\n      });\n    };\n\n    this.getRealName = e => {\n      this.setState({\n        realName: e.target.value\n      });\n    };\n\n    this.getAddress = address => {\n      this.setState({\n        address\n      });\n      console.log(this.state.address);\n    };\n\n    this.getPhone = e => {\n      this.setState({\n        phone: e.target.value\n      });\n      console.log(this.state.phone);\n    };\n\n    this.registerPost = () => {\n      this.setState({\n        loading: true\n      });\n      let tmp = this.state.address[0] + this.state.address[1] + this.state.address[2];\n      let params = {\n        uid: this.state.uid,\n        email: this.state.email,\n        password: this.state.password,\n        nickname: this.state.nickname,\n        realName: this.state.realName,\n        address: tmp,\n        phone: this.state.phone\n      };\n      console.log(params);\n      axios({\n        baseURL: defaultUrl,\n        method: 'post',\n        url: '/registerPage',\n        params\n      }).then(res => {\n        console.log(res.data.msg);\n\n        if (!res.data.code) {\n          message.success('注册成功!');\n          this.setState({\n            loading: false\n          });\n          window.location.href = \"http://localhost:3000\";\n        } else {\n          message.error('注册失败请重试！');\n          this.setState({\n            loading: false\n          });\n        }\n      });\n    };\n\n    this.state = {\n      uid: '',\n      email: '',\n      password: '',\n      nickname: '',\n      realName: '',\n      address: '',\n      phone: '',\n      loading: false\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        className: \"myhead\",\n        style: {\n          position: 'fixed',\n          zIndex: 1,\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        className: \"mycontent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-register\",\n          style: {\n            border: \"solid\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"register-form\",\n            style: {\n              width: \"100%\"\n            },\n            ...formItemLayout,\n            name: \"register\",\n            initialValues: {\n              residence: ['province', 'city', 'district'],\n              prefix: '86'\n            },\n            scrollToFirstError: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"uid\",\n              label: \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\",\n              rules: [{\n                required: true,\n                message: '请输入身份证号码!',\n                whitespace: true\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                onChange: e => this.getUid(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"email\",\n              label: \"\\u90AE\\u7BB1\",\n              rules: [{\n                type: 'email',\n                message: '请输入正确的邮件地址!'\n              }, {\n                required: true,\n                message: '请输入邮件地址!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                onChange: e => this.getEmail(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"password\",\n              label: \"\\u5BC6\\u7801\",\n              rules: [{\n                required: true,\n                message: '请输入密码!'\n              }],\n              hasFeedback: true,\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"confirm\",\n              label: \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n              dependencies: ['password'],\n              hasFeedback: true,\n              rules: [{\n                required: true,\n                message: '请在输入一遍密码!'\n              }, ({\n                getFieldValue\n              }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(new Error('两次密码不一致!'));\n                }\n\n              })],\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {\n                onChange: e => this.getPassword(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"nickname\",\n              label: \"\\u6635\\u79F0\",\n              tooltip: \"\\u4F60\\u5E0C\\u671B\\u522B\\u4EBA\\u600E\\u4E48\\u79F0\\u547C\\u4F60?\",\n              rules: [{\n                required: true,\n                message: '请输入昵称!',\n                whitespace: true\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                onChange: e => this.getNickname(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"realName\",\n              label: \"\\u771F\\u5B9E\\u59D3\\u540D\",\n              rules: [{\n                required: true,\n                message: '请输入真实姓名!',\n                whitespace: true\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                onChange: e => this.getRealName(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"phone\",\n              label: \"\\u624B\\u673A\\u53F7\",\n              rules: [{\n                required: true,\n                message: '请输入手机号!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                addonBefore: prefixSelector,\n                style: {\n                  width: '100%'\n                },\n                onChange: e => this.getPhone(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"residence\",\n              label: \"\\u5C45\\u4F4F\\u5730\",\n              rules: [{\n                type: 'array',\n                required: true,\n                message: '请输入居住地!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Cascader, {\n                placeholder: \"Please select\",\n                options: residences,\n                onChange: this.getAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"agreement\",\n              valuePropName: \"checked\",\n              rules: [{\n                validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error('请同意协议！'))\n              }],\n              ...tailFormItemLayout,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                children: [\"\\u6211\\u5DF2\\u9605\\u8BFB\\u5E76\\u540C\\u610F \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"\",\n                  children: \"\\u300A\\u533B\\u7597\\u9884\\u7EA6\\u5E73\\u53F0\\u7528\\u6237\\u6CE8\\u518C\\u534F\\u8BAE\\u300B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                onClick: this.registerPost,\n                loading: this.state.loading,\n                children: \"\\u6CE8\\u518C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RegisterPage;","map":{"version":3,"sources":["/Users/heangzhan/Desktop/se2021_part1/se2021/src/Part1File/RegisterPage.jsx"],"names":["React","useState","Component","Form","Input","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","Layout","message","TopBar","axios","Header","Content","Option","storage","window","localStorage","defaultUrl","residences","value","label","children","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","width","RegisterPage","constructor","props","getUid","e","setState","uid","target","getEmail","email","getPassword","password","getNickname","nickname","getRealName","realName","getAddress","address","console","log","state","getPhone","phone","registerPost","loading","tmp","params","baseURL","method","url","then","res","data","msg","code","success","location","href","error","componentDidMount","render","position","zIndex","border","residence","prefix","required","whitespace","type","getFieldValue","validator","_","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport {Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete, Layout, message} from 'antd';\nimport TopBar from \"../Component/TopBar\";\nimport '../assets/css/RegisterPage.css';\nimport axios from \"axios\";\nconst {Header, Content} = Layout\nconst { Option } = Select;\n\nvar storage=window.localStorage;\nconst defaultUrl = 'http://127.0.0.1:5003';\n\nconst residences = [\n    {\n        value: 'province',\n        label: '省份',\n        children: [\n            {\n                value: 'city',\n                label: '城市',\n                children: [\n                  {\n                    value: 'district',\n                    label: '地区',\n                  },\n                ],\n            },\n        ],\n    },\n    {\n        value: '浙江',\n        label: '浙江',\n        children: [\n            {\n                value: '杭州',\n                label: '杭州',\n                children: [\n                    {\n                        value: '上城区',\n                        label: '上城区',\n                    },\n                    {\n                        value: '西湖区',\n                        label: '西湖区',\n                    },\n                    {\n                        value: 'gongshu',\n                        label: '拱墅区',\n                    },\n                    {\n                        value: '江干区',\n                        label: '江干区',\n                    },\n                    {\n                        value: '临平区',\n                        label: '临平区',\n                    },\n                    {\n                        value: '余杭区',\n                        label: '余杭区',\n                    },\n                    {\n                        value: '萧山区',\n                        label: '萧山区',\n                    },\n                    {\n                        value: '滨江区',\n                        label: '滨江区',\n                    },\n                    {\n                        value: '钱塘区',\n                        label: '钱塘区',\n                    },\n                    {\n                        value: '富阳区',\n                        label: '富阳区',\n                    },\n                    {\n                        value: '临安区',\n                        label: '临安区',\n                    },\n                ],\n            },\n        ],\n    },\n\n];\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst prefixSelector = (\n    <Form.Item name=\"prefix\" noStyle>\n        <Select style={{width: 70}}>\n            <Option value=\"86\">+86</Option>\n            <Option value=\"81\">+81</Option>\n            <Option value=\"1\">+1</Option>\n            <Option value=\"44\">+44</Option>\n        </Select>\n    </Form.Item>\n);\n\n\nclass RegisterPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            uid:'',\n            email:'',\n            password:'',\n            nickname:'',\n            realName:'',\n            address:'',\n            phone:'',\n            loading:false,\n        }\n    }\n\n    componentDidMount() {\n    }\n\n\n    getUid=e=>{\n        this.setState({\n            uid:e.target.value\n        })\n\n    }\n\n    getEmail=(e)=>{\n        this.setState({\n            email:e.target.value\n        })\n    }\n\n    getPassword=(e)=>{\n        this.setState({\n            password:e.target.value\n        })\n    }\n\n    getNickname=(e)=>{\n        this.setState({\n            nickname:e.target.value\n        })\n    }\n\n    getRealName=(e)=>{\n        this.setState({\n            realName:e.target.value\n        })\n    }\n\n    getAddress=address=>{\n        this.setState({\n            address\n        })\n        console.log(this.state.address)\n    }\n\n    getPhone=(e)=>{\n        this.setState({\n            phone:e.target.value\n        })\n        console.log(this.state.phone)\n    }\n\n    registerPost=()=>{\n        this.setState({\n            loading:true\n        });\n        let tmp = this.state.address[0]+this.state.address[1]+this.state.address[2]\n        let params={\n            uid:this.state.uid,\n            email:this.state.email,\n            password:this.state.password,\n            nickname:this.state.nickname,\n            realName:this.state.realName,\n            address:tmp,\n            phone:this.state.phone,\n        };\n        console.log(params)\n        axios({\n            baseURL:defaultUrl,\n            method:'post',\n            url:'/registerPage',\n            params,\n        }).then(res=>{\n            console.log(res.data.msg)\n            if(!res.data.code) {\n                message.success('注册成功!');\n                this.setState({\n                    loading:false,\n                });\n                window.location.href = \"http://localhost:3000\"\n            }\n            else{\n                message.error('注册失败请重试！');\n                this.setState({\n                    loading:false\n                });\n            }\n        })\n    }\n\n\n    render() {\n        return (\n            <Layout>\n                <Header className='myhead' style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                    <TopBar/>\n                </Header>\n                <Content className='mycontent' >\n                    <div className={\"user-register\"} style={{border:\"solid\"}}>\n                        <Form\n                            className=\"register-form\"\n                            style={{width:\"100%\"}}\n                            {...formItemLayout}\n                            name=\"register\"\n                            initialValues={{\n                                residence: ['province', 'city', 'district'],\n                                prefix: '86',\n                            }}\n                            scrollToFirstError\n                        >\n                            <Form.Item\n                                name=\"uid\"\n                                label=\"身份证号\"\n                                rules={[{ required: true, message: '请输入身份证号码!', whitespace: true }]}\n                            >\n                                <Input onChange={(e)=>this.getUid(e)}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                name=\"email\"\n                                label=\"邮箱\"\n                                rules={[\n                                    {\n                                    type: 'email',\n                                    message: '请输入正确的邮件地址!',\n                                    },\n                                    {\n                                    required: true,\n                                    message: '请输入邮件地址!',\n                                    },\n                                ]}\n                            >\n                                <Input onChange={(e)=>this.getEmail(e)}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                name=\"password\"\n                                label=\"密码\"\n                                rules={[\n                                    {\n                                    required: true,\n                                    message: '请输入密码!',\n                                    },\n                                ]}\n                                hasFeedback\n                            >\n                                <Input.Password/>\n                            </Form.Item>\n\n                            <Form.Item\n                                name=\"confirm\"\n                                label=\"确认密码\"\n                                dependencies={['password']}\n                                hasFeedback\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请在输入一遍密码!',\n                                    },\n                                    ({ getFieldValue }) => ({validator(_, value) {\n                                        if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                        }\n                                        return Promise.reject(new Error('两次密码不一致!'));\n                                    },}),\n                                ]}\n                            >\n                                <Input.Password onChange={(e)=>this.getPassword(e)}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                name=\"nickname\"\n                                label=\"昵称\"\n                                tooltip=\"你希望别人怎么称呼你?\"\n                                rules={[{ required: true, message: '请输入昵称!', whitespace: true }]}\n                            >\n                                <Input onChange={(e)=>this.getNickname(e)}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                name=\"realName\"\n                                label=\"真实姓名\"\n                                rules={[{ required: true, message: '请输入真实姓名!', whitespace: true }]}\n                            >\n                                <Input onChange={(e)=>this.getRealName(e)}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                name=\"phone\"\n                                label=\"手机号\"\n                                rules={[{ required: true, message: '请输入手机号!' }]}\n                            >\n                                <Input\n                                    addonBefore={prefixSelector}\n                                    style={{ width: '100%' }}\n                                    onChange={(e)=>this.getPhone(e)}\n                                />\n                            </Form.Item>\n\n\n                            <Form.Item\n                                name=\"residence\"\n                                label=\"居住地\"\n                                rules={[\n                                  { type: 'array', required: true, message: '请输入居住地!' },\n                                ]}\n                            >\n                                <Cascader\n                                    placeholder=\"Please select\"\n                                    options={residences}\n                                    onChange={this.getAddress}\n                                />\n                            </Form.Item>\n\n                            <Form.Item\n                                name=\"agreement\"\n                                valuePropName=\"checked\"\n                                rules={[\n                                    {\n                                    validator: (_, value) =>\n                                      value ? Promise.resolve() : Promise.reject(new Error('请同意协议！')),\n                                    },\n                                ]}\n                                {...tailFormItemLayout}\n                            >\n                                <Checkbox>\n                                    我已阅读并同意 <a href=\"\">《医疗预约平台用户注册协议》</a>\n                                </Checkbox>\n                            </Form.Item>\n\n                            <Form.Item {...tailFormItemLayout}>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    onClick={this.registerPost}\n                                    loading={this.state.loading}\n                                >\n                                    注册\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </Content>\n            </Layout>\n        )\n    }\n}\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}